name: DRF Workflow

on:
  push:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.2

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt 
        
    - name: Test with flake8 test
      run: |
        cd backend
        python -m flake8
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push backend to Docker Hub
      uses: docker/build-push-action@v2
      with:
        file: ./backend/Dockerfile
        context: ./backend
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd foodgram-project-react/infra/
            sudo docker-compose stop
            sudo docker-compose rm -f web
            sudo docker-compose pull
            rm .env
            touch .env
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
            echo SQL_ENGINE=${{ secrets.SQL_ENGINE }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo SQL_HOST=${{ secrets.SQL_HOST }} >> .env
            echo SQL_PORT=${{ secrets.SQL_PORT }} >> .env
            echo "STATIC_URL=static/django/" >> .env
            sudo docker-compose up -d 
            sudo docker-compose exec -T web python manage.py collectstatic --noinput
            sudo docker-compose exec -T web python manage.py makemigrations
            sudo docker-compose exec -T web python manage.py migrate
            sudo docker-compose restart
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!