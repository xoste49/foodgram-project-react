# This is a basic workflow to help you get started with Actions

name: DRF Workflow

on:
  push:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt 
        
    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        #python -m pytest
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          gh repo clone xoste49/foodgram-project-react
          cd foodgram-project-react/infra/
          sudo docker-compose stop
          sudo docker-compose rm web
          touch release.env
          #echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          #echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          #echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          #echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          #echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          #echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          #sudo docker-compose up -d 
          #sudo docker-compose exec web python manage.py collectstatic
          #sudo docker-compose exec web python manage.py makemigrations
          #sudo docker-compose exec web python manage.py migrate
          #sudo docker-compose restart
